CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT(MagicMirror)

OPTION(WITH_DEBUG "whether to build with debug" OFF)
OPTION(PRINT_TIME "whether to print time" OFF)
OPTION(USE_CPP11 "whether to use cpp11" ON)
OPTION(BUILD_LIBRARY "whether to build library" ON)

IF(WITH_DEBUG)
    IF(CMAKE_HOST_SYSTEM_NAME MATCHES Linux)
        SET(CXX_COMPLIER_FLAG "-g -Wall")
        MESSAGE(STATUS "YOU COMPLIE THE CODE WITH DEBUG!!")
    ENDIF()
ELSE()
    MESSAGE(STATUS "YOU COMPLIE THE CODE WITHOUT DEBUG!")
ENDIF()


IF(PRINT_TIME)
    ADD_DEFINITIONS(-DPRINT_TIME)
    MESSAGE(STATUS "YOU SELECT PRINT TIME!")
ELSE()
    MESSAGE(STATUS "YOU NOT SELECT PRINT TIME!")
ENDIF()

IF(USE_CPP11)
    IF(CMAKE_HOST_SYSTEM_NAME MATCHES Linux)
        SET(CPP11_ENABLED_FLAGS "-std=c++11")
        MESSAGE(STATUS "USE C++11!")
    ENDIF()
ENDIF()

##########SET COMPLIER FLAG AND PATH##########
SET(CMAKE_CXX_FLAGS "${CXX_COMPLIER_FLAG} ${CPP11_ENABLED_FLAGS} -O3")
MESSAGE(STATUS "CMAKE_CXX_FLAGS: ${CMAKE_CXX_FLAGS}")
SET(LINUX_TOOLCHAIN_ROOT /usr/bin)
SET(CMAKE_CXX_COMPLIER "${LINUX_TOOLCHAIN_ROOT}/g++")
MESSAGE(STATUS "C++ COMPLIER: ${LINUX_TOOLCHAIN_ROOT}")

##########SET LIBRARY AND HEAD FILE PATH##########


set(CMAKE_C_COMPILER g++)

find_package(OpenCV REQUIRED)

include_directories(${OpenCV_INCLUDE_DIRS})

ADD_DEFINITIONS("-g -Wall -o -lpthread -std=c++11")

add_executable(a main.cc Clock.cc)
target_link_libraries(a ${OpenCV_LIBS})
